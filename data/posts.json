[
  {
    "title": "2021년 리뷰",
    "description": "2021년 한해 동안 배운 기술들, 생각들 정리",
    "date": "2021-12-31",
    "category": "my story",
    "path": "review-2021",
    "featured": false
  },
  {
    "title": "자바스크립트 기초 문법",
    "description": "기본 문법부터 사용하는 실전까지 최종정리",
    "date": "2022-05-08",
    "category": "javascript",
    "path": "javascript-basic",
    "featured": false
  },
  {
    "title": "자바스크립트 10가지 프로팁!",
    "description": "프로처럼 자바스크립트 사용할 수 있는 10가지 팁",
    "date": "2022-06-15",
    "category": "javascript",
    "path": "javascript-10-tips",
    "featured": true
  },
  {
    "title": "Node 기초 정리",
    "description": "기본 적인 Node 사용법에 대해 전부 정리!",
    "date": "2022-08-21",
    "category": "backend",
    "path": "node-basic",
    "featured": false
  },
  {
    "title": "2022년 리뷰",
    "description": "2022년 한해 동안 배운 기술들, 생각들 정리",
    "date": "2022-12-31",
    "category": "my story",
    "path": "review-2022",
    "featured": false
  },
  {
    "title": "Node 프로 팁!",
    "description": "노드를 프로처럼 사용하기 위한 모든 팁들을 정리!",
    "date": "2023-04-10",
    "category": "backend",
    "path": "node-pro-tips",
    "featured": true
  },
  {
    "title": "리액트 Best Practice!",
    "description": "리액트를 정확하게 사용하는 방법들을 정리",
    "date": "2023-04-15",
    "category": "frontend",
    "path": "best-react-practices",
    "featured": true,
    "content": [
      {
        "React is a JavaScript library for building user interfaces.": "## A Simple Component"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "React components implement a `render()` method that takes input data and returns what to display. This example uses an XML-like syntax called JSX. Input data that is passed into the component can be accessed by `render()` via `this.props`."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "```jsx"
      },
      {
        "React is a JavaScript library for building user interfaces.": "class HelloMessage extends React.Component {"
      },
      {
        "React is a JavaScript library for building user interfaces.": "render() {"
      },
      {
        "React is a JavaScript library for building user interfaces.": "return <div>Hello {this.props.name}</div>;"
      },
      {
        "React is a JavaScript library for building user interfaces.": "}"
      },
      {
        "React is a JavaScript library for building user interfaces.": "}"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "root.render(<HelloMessage name='Taylor' />);"
      },
      {
        "React is a JavaScript library for building user interfaces.": "```"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "## Declarative"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "A paragraph with _emphasis_ and **strong importance**."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "> A block quote with ~strikethrough~ and a URL: https://reactjs.org."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "- Lists"
      },
      {
        "React is a JavaScript library for building user interfaces.": "- [ ] todo"
      },
      {
        "React is a JavaScript library for building user interfaces.": "- [x] done"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "## Component-Based"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "Build encapsulated components that manage their own state, then compose them to make complex UIs."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "## Learn Once, Write Anywhere"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "We don’t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "React can also render on the server using Node and power mobile apps using React Native."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "![React Office desk](https://images.unsplash.com/photo-1633356122102-3fe601e05bd2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2070&q=80)"
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "> The most important addition in React 18 is something we hope you never have to think about: concurrency. We think this is largely true for application developers, though the story may be a bit more complicated for library maintainers."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "Concurrency is not a feature, per se. It’s a new behind-the-scenes mechanism that enables React to prepare multiple versions of your UI at the same time. You can think of concurrency as an implementation detail — it’s valuable because of the features that it unlocks. React uses sophisticated techniques in its internal implementation, like priority queues and multiple buffering. But you won’t see those concepts anywhere in our public APIs."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "When we design APIs, we try to hide implementation details from developers. As a React developer, you focus on what you want the user experience to look like, and React handles how to deliver that experience. So we don’t expect React developers to know how concurrency works under the hood."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "However, Concurrent React is more important than a typical implementation detail — it’s a foundational update to React’s core rendering model. So while it’s not super important to know how concurrency works, it may be worth knowing what it is at a high level."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "A key property of Concurrent React is that rendering is interruptible. When you first upgrade to React 18, before adding any concurrent features, updates are rendered the same as in previous versions of React — in a single, uninterrupted, synchronous transaction. With synchronous rendering, once an update starts rendering, nothing can interrupt it until the user can see the result on screen."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "In a concurrent render, this is not always the case. React may start rendering an update, pause in the middle, then continue later. It may even abandon an in-progress render altogether. React guarantees that the UI will appear consistent even if a render is interrupted. To do this, it waits to perform DOM mutations until the end, once the entire tree has been evaluated. With this capability, React can prepare new screens in the background without blocking the main thread. This means the UI can respond immediately to user input even if it’s in the middle of a large rendering task, creating a fluid user experience."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "Another example is reusable state. Concurrent React can remove sections of the UI from the screen, then add them back later while reusing the previous state. For example, when a user tabs away from a screen and back, React should be able to restore the previous screen in the same state it was in before. In an upcoming minor, we’re planning to add a new component called `<Offscreen>` that implements this pattern. Similarly, you’ll be able to use Offscreen to prepare new UI in the background so that it’s ready before the user reveals it."
      },
      {
        "React is a JavaScript library for building user interfaces.": ""
      },
      {
        "React is a JavaScript library for building user interfaces.": "Concurrent rendering is a powerful new tool in React and most of our new features are built to take advantage of it, including Suspense, transitions, and streaming server rendering. But React 18 is just the beginning of what we aim to build on this new foundation."
      }
    ]
  },
  {
    "title": "리액트 18버전!",
    "description": "리액트 18에 추가된 사항들 정리",
    "date": "2023-05-02",
    "category": "frontend",
    "path": "react18-walkthrough",
    "featured": true
  },
  {
    "title": "2023년 리뷰",
    "description": "2023년 한해 동안 배운 기술들, 생각들 정리",
    "date": "2023-12-31",
    "category": "my story",
    "path": "review-2023",
    "featured": true
  }
]
